services:
  airflow:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    container_name: airflow
    volumes:
      - etl-containers-shared-data:/app/data        # Volume condiviso fra i containers i dati
      - etl-data-airflow:/opt/airflow               # Volume per la persistenza dei dati di Airflow
    ports:
      - "8080:8080"
    networks:
      - etl-network
    restart: always

# monitoraggio microservizi
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - etl-prometheus-data:/etc/prometheus                         # Volume
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # Montaggio Folder su Volume
    ports:
      - "9090:9090"
    networks:
      - etl-network
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - etl-grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - etl-network
    restart: always


  read-csv-service:
    build:
      context: ./read-csv-service
      dockerfile: Dockerfile
    container_name: read-csv-service
    volumes:
      - etl-containers-shared-data:/app/data
    expose:
      - "5001"
    ports:
      - "5001:5001"
    networks:
      - etl-network
    restart: always

  clean-nan-csv-service:
    build:
      context: ./clean-nan-csv-service
      dockerfile: Dockerfile
    container_name: clean-nan-csv-service
    volumes:
      - etl-containers-shared-data:/app/data
    expose:
      - "5002"
    ports:
      - "5002:5002"
    networks:
      - etl-network
    restart: always

  get-columns-csv-service:
    build:
      context: ./get-columns-csv-service
      dockerfile: Dockerfile
    container_name: get-columns-csv-service
    volumes:
      - etl-containers-shared-data:/app/data
    expose:
      - "5003"
    ports:
      - "5003:5003"
    networks:
      - etl-network
    restart: always

  delete-columns-csv-service:
    build:
      context: ./delete-columns-csv-service
      dockerfile: Dockerfile
    container_name: delete-columns-csv-service
    volumes:
      - etl-containers-shared-data:/app/data
    expose:
      - "5004"
    ports:
      - "5004:5004"
    networks:
      - etl-network
    restart: always  

networks:
  etl-network:
    driver: bridge

volumes:
  etl-containers-shared-data:
  etl-data-airflow:
  etl-grafana-data:
  etl-prometheus-data: