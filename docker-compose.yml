services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - etl-postgres-data:/var/lib/postgresql/data
    networks:
      - etl-network

  airflow:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    container_name: airflow
    depends_on:
    - postgres
    volumes:
      - etl-containers-shared-data:/app/data         # Volume condiviso fra i container per i dati
      - etl-data-airflow:/opt/airflow                # Volume per la persistenza dei dati di Airflow
    ports:
      - "8080:8080"
    networks:
      - etl-network
    restart: always

  # exporter metriche Airflow -> Prometheus
  statsd-exporter:
    image: prom/statsd-exporter:latest
    container_name: statsd-exporter
    depends_on:
    - postgres
    ports:
      - "9102:9102"  # Porta per Prometheus
    networks:
      - etl-network

# monitoraggio microservizi
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - etl-prometheus-data:/etc/prometheus                         # Volume
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # Montaggio Folder su Volume
    ports:
      - "9090:9090"
    networks:
      - etl-network
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - etl-grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - etl-network
    restart: always

# microservizi
  extract-csv-service:
    build:
      context: ./services/extract-csv-service
      dockerfile: Dockerfile
    container_name: extract-csv-service
    volumes:
      - etl-containers-shared-data:/app/data
    ports:
      - "5001:5001"
    networks:
      - etl-network
    restart: always

  clean-nan-service:
    build:
      context: ./services/clean-nan-service
      dockerfile: Dockerfile
    container_name: clean-nan-service
    volumes:
      - etl-containers-shared-data:/app/data
    ports:
      - "5002:5002"
    networks:
      - etl-network
    restart: always

  get-columns-csv-service:
    build:
      context: ./services/get-columns-csv-service
      dockerfile: Dockerfile
    container_name: get-columns-csv-service
    volumes:
      - etl-containers-shared-data:/app/data
    ports:
      - "5003:5003"
    networks:
      - etl-network
    restart: always

  delete-columns-csv-service:
    build:
      context: ./services/delete-columns-csv-service
      dockerfile: Dockerfile
    container_name: delete-columns-csv-service
    volumes:
      - etl-containers-shared-data:/app/data
    ports:
      - "5004:5004"
    networks:
      - etl-network
    restart: always

  extract-sql-service:
    build:
      context: ./services/extract-sql-service
      dockerfile: Dockerfile
    container_name: extract-sql-service
    volumes:
      - etl-containers-shared-data:/app/data
    ports:
      - "5005:5005"
    networks:
      - etl-network
    restart: always

  extract-api-service:
    build:
      context: ./services/extract-api-service
      dockerfile: Dockerfile
    container_name: extract-api-service
    volumes:
      - etl-containers-shared-data:/app/data
    ports:
      - "5006:5006"
    networks:
      - etl-network
    restart: always

  extract-excel-service:
    build:
      context: ./services/extract-excel-service
      dockerfile: Dockerfile
    container_name: extract-excel-service
    volumes:
      - etl-containers-shared-data:/app/data
    ports:
      - "5007:5007"
    networks:
      - etl-network
    restart: always

  join-datasets-csv-service:
    build:
      context: ./services/join-datasets-csv-service
      dockerfile: Dockerfile
    container_name: join-datasets-csv-service
    volumes:
      - etl-containers-shared-data:/app/data
    ports:
      - "5008:5008"
    networks:
      - etl-network
    restart: always
  
networks:
  etl-network:
    driver: bridge

volumes:
  etl-containers-shared-data:
  etl-postgres-data:
  etl-data-airflow:
  etl-grafana-data:
  etl-prometheus-data: