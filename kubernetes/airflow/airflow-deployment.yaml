apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: airflow
  name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: airflow
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: airflow
    spec:
      initContainers:
        - name: init-airflow-db
          image: vtvito/etl_microservices:airflow  # Usa la stessa immagine di Airflow
          command: ["airflow", "db", "init"]
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"  # Assicurati che questo corrisponda alla tua connessione DB
          volumeMounts:
            - mountPath: /opt/airflow
              name: etl-data-airflow

      containers:
        - image: vtvito/etl_microservices:airflow
          name: airflow
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
          volumeMounts:
            - mountPath: /app/data
              name: etl-containers-shared-data
            - mountPath: /opt/airflow
              name: etl-data-airflow
      restartPolicy: Always
      volumes:
        - name: etl-containers-shared-data
          persistentVolumeClaim:
            claimName: etl-containers-shared-data
        - name: etl-data-airflow
          persistentVolumeClaim:
            claimName: etl-data-airflow